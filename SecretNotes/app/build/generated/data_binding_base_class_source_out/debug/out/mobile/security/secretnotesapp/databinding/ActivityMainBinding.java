// Generated by view binder compiler. Do not edit!
package mobile.security.secretnotesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import mobile.security.secretnotesapp.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton btnAddNote;

  @NonNull
  public final ImageView btnSearch;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final TextInputEditText etQuery;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final TextView noteHint;

  @NonNull
  public final RecyclerView rvNotes;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView tvResult;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton btnAddNote, @NonNull ImageView btnSearch,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull TextInputEditText etQuery,
      @NonNull FrameLayout frameLayout, @NonNull TextView noteHint, @NonNull RecyclerView rvNotes,
      @NonNull ScrollView scrollView, @NonNull TextView tvResult) {
    this.rootView = rootView;
    this.btnAddNote = btnAddNote;
    this.btnSearch = btnSearch;
    this.coordinatorLayout = coordinatorLayout;
    this.etQuery = etQuery;
    this.frameLayout = frameLayout;
    this.noteHint = noteHint;
    this.rvNotes = rvNotes;
    this.scrollView = scrollView;
    this.tvResult = tvResult;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_note;
      FloatingActionButton btnAddNote = ViewBindings.findChildViewById(rootView, id);
      if (btnAddNote == null) {
        break missingId;
      }

      id = R.id.btn_search;
      ImageView btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.coordinator_layout;
      CoordinatorLayout coordinatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (coordinatorLayout == null) {
        break missingId;
      }

      id = R.id.et_query;
      TextInputEditText etQuery = ViewBindings.findChildViewById(rootView, id);
      if (etQuery == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.note_hint;
      TextView noteHint = ViewBindings.findChildViewById(rootView, id);
      if (noteHint == null) {
        break missingId;
      }

      id = R.id.rv_notes;
      RecyclerView rvNotes = ViewBindings.findChildViewById(rootView, id);
      if (rvNotes == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.tv_result;
      TextView tvResult = ViewBindings.findChildViewById(rootView, id);
      if (tvResult == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnAddNote, btnSearch,
          coordinatorLayout, etQuery, frameLayout, noteHint, rvNotes, scrollView, tvResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
